load("@rules_jvm_external//:defs.bzl", "artifact")
load("@rules_java//java:defs.bzl", "java_library", "java_import")
load("@io_bazel_rules_closure//closure:defs.bzl", "closure_js_library")
load("@com_google_j2cl//build_defs:rules.bzl", "j2cl_application")
package(default_visibility = ["//visibility:public"])
#package(
#    default_applicable_licenses = ["@com_google_j2cl//:j2cl_license"],
#    licenses = ["notice"],
#)

#closure_js_library(
#    name = "serverjs",
#    srcs = ["app.js"],
#    deps = ["//src/main/java/com/google/j2cl/samples/helloworldlib"],
#)

j2cl_application(
    name = "serverjs",
    entry_points = ["org/eclipse/lsp/cobol/LangServerBootstrap"],
    deps = [":server"],
)

java_binary(
    name = "server",
    srcs = glob(["src/main/java/**/*.java"]) + [":antlr_gen_cobol_preprocessor"] + [":antlr_gen_cics"] + [":antlr_gen_db2"],
    main_class = "org.eclipse.lsp.cobol.LangServerBootstrap",
    resources = glob(["src/main/resources/**"]),
    deps = [
                artifact("com.google.guava:guava"),
                artifact("com.google.code.gson:gson"),
                artifact("ch.qos.logback:logback-classic"),
                artifact("org.eclipse.lsp4j:org.eclipse.lsp4j"),
                artifact("org.apache.commons:commons-lang3"),
                artifact("com.google.code.findbugs:jsr305"),
                artifact("org.slf4j:slf4j-api"),
                artifact("org.eclipse.lsp4j:org.eclipse.lsp4j.jsonrpc"),
                artifact("org.antlr:antlr4"),
                 artifact("org.antlr:antlr4-runtime"),
                 artifact("com.google.inject:guice"),
                 artifact("info.picocli:picocli"),
                 artifact("com.google.inject.extensions:guice-assistedinject"),
                 artifact("ch.qos.logback:logback-core"),
                 artifact("org.apache.commons:commons-text"),
                 artifact("commons-io:commons-io"),
                 artifact("javax.inject:javax.inject"),
        "@parser//:parser",
        "@common//:common",
        ":lombok"
    ]
)

java_import(
    name = "antlr_jar",
    jars = ["@maven//:org/antlr/antlr4/4.7.1/antlr4-4.7.1-complete.jar"],
)

genrule(
    name = "antlr_gen_cobol_preprocessor",
    srcs = glob(["src/main/antlr4/org/eclipse/lsp/cobol/core/parser/*.g4"]),
    tools = [":antlr_jar"],
    cmd = "java -Xmx500M -cp $(locations :antlr_jar) org.antlr.v4.Tool -Dlanguage=Java -visitor -package org.eclipse.lsp.cobol.core -o $(RULEDIR) $(SRCS)",
    outs = ["CobolPreprocessor.java",
            "CobolPreprocessorBaseVisitor.java",
            "CobolPreprocessorListener.java",
            "CompilerDirectivesLexer.tokens",
            "CompilerDirectivesParserBaseListener.java",
            "CompilerDirectivesParserVisitor.java",
            "CobolPreprocessor.tokens",
            "CobolPreprocessorLexer.java",
            "CobolPreprocessorVisitor.java",
            "CompilerDirectivesParser.java",
            "CompilerDirectivesParserBaseVisitor.java",
            "TechnicalLexer.java",
            "CobolPreprocessorBaseListener.java",
            "CobolPreprocessorLexer.tokens",
            "CompilerDirectivesLexer.java",
            "CompilerDirectivesParser.tokens",
            "CompilerDirectivesParserListener.java",
            "TechnicalLexer.tokens"],
    visibility = [ "//visibility:public" ]
)

genrule(
    name = "antlr_gen_cics",
    srcs = glob(["src/main/antlr4/org/eclipse/lsp/cics/parser/*.g4"]),
    tools = [":antlr_jar"],
    cmd = "java -Xmx500M -cp $(locations :antlr_jar) org.antlr.v4.Tool -Dlanguage=Java -visitor -package org.eclipse.lsp.cobol.implicitDialects.cics -o $(RULEDIR) $(SRCS)",
    outs = ["CICSLexer.java",
            "CICSLexer.tokens",
            "CICSParser.java",
            "CICSParser.tokens",
            "CICSParserBaseListener.java",
            "CICSParserBaseVisitor.java",
            "CICSParserListener.java",
            "CICSParserVisitor.java"],
    visibility = [ "//visibility:public" ]
)

genrule(
    name = "antlr_gen_db2",
    srcs = glob(["src/main/antlr4/org/eclipse/lsp/db2/parser/*.g4"]),
    tools = [":antlr_jar"],
    cmd = "java -Xmx500M -cp $(locations :antlr_jar) org.antlr.v4.Tool -Dlanguage=Java -visitor -package org.eclipse.lsp.cobol.implicitDialects.sql -o $(RULEDIR) $(SRCS)",
    outs = ["Db2SqlLexer.java",
            "Db2SqlLexer.tokens",
            "Db2SqlParser.java",
            "Db2SqlParser.tokens",
            "Db2SqlParserBaseListener.java",
            "Db2SqlParserBaseVisitor.java",
            "Db2SqlParserListener.java",
            "Db2SqlParserVisitor.java"
],
    visibility = [ "//visibility:public" ]
)

java_plugin(
    name = "lombok_plugin",
    generates_api = True,
    processor_class = "lombok.launch.AnnotationProcessorHider$AnnotationProcessor",
    deps = ["@maven//:org_projectlombok_lombok"],
)

java_library(
    name = "lombok",
    exported_plugins = [
        ":lombok_plugin",
    ],
    visibility = ["//visibility:public"],
    exports = [
        "@maven//:org_projectlombok_lombok",
    ],
)



