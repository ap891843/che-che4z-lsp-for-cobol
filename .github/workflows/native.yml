# This is a basic workflow to help you get started with Actions

name: Native Build

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  buildOnWindows:
    runs-on: windows-latest
    steps:
      - uses: al-cheb/configure-pagefile-action@v1.2
        with:
          minimum-size: 16GB
          maximum-size: 16GB
          disk-root: "C:"
      - uses: actions/checkout@v2
      - uses: ilammy/msvc-dev-cmd@v1.5.0
      - uses: microsoft/setup-msbuild@v1
      - uses: ayltai/setup-graalvm@v1
        with:
          java-version: 11
          graalvm-version: 22.1.0
          native-image: true
      - name: Build with Maven
        working-directory: server
        run: mvn -e -B -Pnative -DskipTests clean package
        shell: powershell
      - uses: actions/upload-artifact@v2
        with:
          if-no-files-found: warn
          name: package-win
          path: |
            server/target/*.exe
            server/target/*.dll
            server/target/*.txt
      - uses: actions/upload-artifact@v2
        with:
          if-no-files-found: warn
          name: logs
          path: server/target/*.log

  buildOnMac:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2
      - uses: ayltai/setup-graalvm@v1
        with:
          java-version: 11
          graalvm-version: 22.1.0
          native-image: true
      - name: Build with Maven
        working-directory: server
        run: mvn -e -B -Pnative -DskipTests clean package
      - name: Run UPX
        uses: svenstaro/upx-action@v2
        with:
          file: server/target/server
          args: '-7'
      - name: Upload artifacts
        run: mkdir staging && cp server/target/server staging/server-mac-amd64
      - uses: actions/upload-artifact@v2
        with:
          name: package-macos
          path: staging
      - uses: actions/upload-artifact@v2
        with:
          if-no-files-found: warn
          name: logs
          path: server/target/*.log

  buildOnLinux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ayltai/setup-graalvm@v1
        with:
          java-version: 11
          graalvm-version: 22.1.0
          native-image: true
      - name: Build with Maven
        working-directory: server
        run: mvn -e -B -Pnative -DskipTests clean package
      - name: Run UPX
        uses: crazy-max/ghaction-upx@v1.3.3
        with:
          version: latest
          file: server/target/server
          args: '-7'
      - name: Upload artifacts
        run: mkdir staging && cp server/target/server staging/server
      - uses: actions/upload-artifact@v2
        with:
          name: package-linux
          path: staging
      - uses: actions/upload-artifact@v2
        with:
          name: jar
          path: server/target/server.jar
      - uses: actions/upload-artifact@v2
        with:
          if-no-files-found: warn
          name: logs
          path: server/target/*.log

  build:
    runs-on: ubuntu-latest
    needs: [buildOnLinux, buildOnMac, buildOnWindows]
    steps:
    - uses: actions/checkout@v2
    - name: Retrieve native images
      uses: actions/download-artifact@v2
      with:
        path: staging
    - name: Retrieve native images
      uses: actions/download-artifact@v2
      with:
        path: jar
    - uses: actions/setup-node@v3
      with:
        node-version: 14
    - name: build client
      run: npm ci --ignore-scripts
      working-directory: clients/cobol-lsp-vscode-extension
    - name: postinstall
      run: npm run postinstall
      working-directory: clients/cobol-lsp-vscode-extension
    - name: coverage
      run: npm run coverage
      working-directory: clients/cobol-lsp-vscode-extension
    - name: see ls 
      working-directory: clients/cobol-lsp-vscode-extension
      run: ls -ltra
    - name: see ls ..
      working-directory: clients/cobol-lsp-vscode-extension
      run: ls -ltra ..
    - name: see ls ../..
      working-directory: clients/cobol-lsp-vscode-extension
      run: ls -ltra ../..
    - name: configure server
      working-directory: clients/cobol-lsp-vscode-extension
      run: |
        "cp -r ../../staging/. ./server/"
        "cp ../../jar/. ./server"
    - name: coverage
      run: npm run package
    - uses: actions/upload-artifact@v3
      with:
        name: vsix-package
        path: '*.vsix'
       

